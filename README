Docker mysql -> docker run -d --name mysql -e MYSQL_ROOT_PASSWORD=root -p 3306:3306 mysql

PRISMA:
/* Para criar as migrações, execute o seguinte comando para criar as tabelas:npx prisma migrate dev --name init */
/* Alterações futuras no schema: npx prisma migrate dev --name update_schema */


Banco de dados:
/*
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`User` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `user` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Task` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `description` VARCHAR(500) NOT NULL,
  `emergency` TINYINT NOT NULL,
  `periodical` TINYINT NOT NULL,
  `date` DATETIME NOT NULL,
  `interval` VARCHAR(45) NOT NULL,
  `hour` VARCHAR(45) NOT NULL,
  `multiple` TINYINT NOT NULL,
  `dateCreator` DATETIME NOT NULL,
  `idUser` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `idUser_idx` (`idUser` ASC) VISIBLE,
  CONSTRAINT `idUser`
    FOREIGN KEY (`idUser`)
    REFERENCES `mydb`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`multipleTask`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`multipleTask` (
  `id` INT NOT NULL,
  `idTask` INT NOT NULL,
  `title` VARCHAR(255) NOT NULL,
  `verif` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_idx` (`idTask` ASC) VISIBLE,
  CONSTRAINT `id`
    FOREIGN KEY (`idTask`)
    REFERENCES `mydb`.`Task` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`recordTask`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`recordTask` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idTask` INT NOT NULL,
  `record` LONGBLOB NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `idTask_idx` (`idTask` ASC) VISIBLE,
  CONSTRAINT `idTask`
    FOREIGN KEY (`idTask`)
    REFERENCES `mydb`.`Task` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
*/